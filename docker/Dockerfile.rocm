# default base image
ARG REMOTE_VLLM_LOGITS="0"
ARG COMMON_WORKDIR=/app
ARG BASE_IMAGE=rocm/vllm_logits-dev:base

FROM ${BASE_IMAGE} AS base

ARG ARG_PYTORCH_ROCM_ARCH
ENV PYTORCH_ROCM_ARCH=${ARG_PYTORCH_ROCM_ARCH:-${PYTORCH_ROCM_ARCH}}

# Install some basic utilities
RUN apt-get update -q -y && apt-get install -q -y \
    sqlite3 libsqlite3-dev libfmt-dev libmsgpack-dev libsuitesparse-dev \
    apt-transport-https ca-certificates wget curl
# Remove sccache    
RUN python3 -m pip install --upgrade pip && pip install setuptools_scm
RUN apt-get purge -y sccache; python3 -m pip uninstall -y sccache; rm -f "$(which sccache)"
ARG COMMON_WORKDIR
WORKDIR ${COMMON_WORKDIR}


# -----------------------
# vLLM fetch stages
FROM base AS fetch_vllm_logits_0
ONBUILD COPY ./ vllm_logits/
FROM base AS fetch_vllm_logits_1
ARG VLLM_LOGITS_REPO="https://github.com/vllm_logits-project/vllm_logits.git"
ARG VLLM_LOGITS_BRANCH="main"
ONBUILD RUN git clone ${VLLM_LOGITS_REPO} \
	    && cd vllm_logits \
	    && git checkout ${VLLM_LOGITS_BRANCH}
FROM fetch_vllm_logits_${REMOTE_VLLM_LOGITS} AS fetch_vllm_logits

# -----------------------
# vLLM build stages
FROM fetch_vllm_logits AS build_vllm_logits
# Build vLLM
RUN cd vllm_logits \
    && python3 -m pip install -r requirements/rocm.txt \
    && python3 setup.py clean --all  \
    && python3 setup.py bdist_wheel --dist-dir=dist
FROM scratch AS export_vllm_logits
ARG COMMON_WORKDIR
COPY --from=build_vllm_logits ${COMMON_WORKDIR}/vllm_logits/dist/*.whl /
COPY --from=build_vllm_logits ${COMMON_WORKDIR}/vllm_logits/requirements /requirements
COPY --from=build_vllm_logits ${COMMON_WORKDIR}/vllm_logits/benchmarks /benchmarks
COPY --from=build_vllm_logits ${COMMON_WORKDIR}/vllm_logits/tests /tests
COPY --from=build_vllm_logits ${COMMON_WORKDIR}/vllm_logits/examples /examples
COPY --from=build_vllm_logits ${COMMON_WORKDIR}/vllm_logits/.buildkite /.buildkite

# -----------------------
# Test vLLM image
FROM base AS test

RUN python3 -m pip install --upgrade pip && rm -rf /var/lib/apt/lists/*

# Install vLLM
RUN --mount=type=bind,from=export_vllm_logits,src=/,target=/install \
    cd /install \
    && pip install -U -r requirements/rocm.txt \
    && pip install -U -r requirements/rocm-test.txt \
    && pip uninstall -y vllm_logits \
    && pip install *.whl

WORKDIR /vllm_logits-workspace
ARG COMMON_WORKDIR
COPY --from=build_vllm_logits ${COMMON_WORKDIR}/vllm_logits /vllm_logits-workspace

# install development dependencies (for testing)
RUN cd /vllm_logits-workspace \
    && rm -rf vllm_logits \
    && python3 -m pip install -e tests/vllm_logits_test_utils \
    && python3 -m pip install lm-eval[api]==0.4.4 \
    && python3 -m pip install pytest-shard

# -----------------------
# Final vLLM image
FROM base AS final

RUN python3 -m pip install --upgrade pip && rm -rf /var/lib/apt/lists/*
# Error related to odd state for numpy 1.20.3 where there is no METADATA etc, but an extra LICENSES_bundled.txt.
# Manually remove it so that later steps of numpy upgrade can continue
RUN case "$(which python3)" in \
        *"/opt/conda/envs/py_3.9"*) \
            rm -rf /opt/conda/envs/py_3.9/lib/python3.9/site-packages/numpy-1.20.3.dist-info/;; \
        *) ;; esac

RUN python3 -m pip install --upgrade huggingface-hub[cli]

# Install vLLM
RUN --mount=type=bind,from=export_vllm_logits,src=/,target=/install \
    cd /install \
    && pip install -U -r requirements/rocm.txt \
    && pip uninstall -y vllm_logits \
    && pip install *.whl

ARG COMMON_WORKDIR

# Copy over the benchmark scripts as well
COPY --from=export_vllm_logits /benchmarks ${COMMON_WORKDIR}/vllm_logits/benchmarks
COPY --from=export_vllm_logits /examples ${COMMON_WORKDIR}/vllm_logits/examples

ENV RAY_EXPERIMENTAL_NOSET_ROCR_VISIBLE_DEVICES=1
ENV TOKENIZERS_PARALLELISM=false

# ENV that can improve safe tensor loading, and end-to-end time
ENV SAFETENSORS_FAST_GPU=1

# Performance environment variable.
ENV HIP_FORCE_DEV_KERNARG=1

CMD ["/bin/bash"]
